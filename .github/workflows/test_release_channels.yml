name: Test Release Channels

on: workflow_dispatch

jobs:
  test_homebrew_tap:
    name: Test Homebrew tap
    timeout-minutes: 10

    strategy:
      matrix:
        runs-on:
          - macos-13
          - macos-14

    runs-on: ${{ matrix.runs-on }}

    steps:
      - name: Install and run DCMfx
        run: |
          brew tap dcmfx/tap
          brew install dcmfx
          dcmfx --version

  test_windows:
    name: Test Windows build
    timeout-minutes: 10

    strategy:
      matrix:
        runs-on:
          - windows-2019
          - windows-2022
          - windows-2025

    runs-on: ${{ matrix.runs-on }}

    defaults:
      run:
        shell: powershell

    steps:
      - name: Download and run DCMfx
        run: |
          # Get latest version from GitHub API
          $version = (Invoke-RestMethod -Uri "https://api.github.com/repos/dcmfx/dcmfx/releases/latest").tag_name

          # Download the release
          $downloadUrl = "https://github.com/dcmfx/dcmfx/releases/download/$version/dcmfx-$version-x86_64-pc-windows-gnu.tar.gz"
          Invoke-WebRequest -Uri $downloadUrl -OutFile "dcmfx.tar.gz"

          # Extract it
          & "C:\Program Files\7-Zip\7z.exe" x "dcmfx.tar.gz" -y
          & "C:\Program Files\7-Zip\7z.exe" x "dcmfx.tar" -y

          # Run DCMfx
          .\dcmfx.exe --version

  test_apt_repository:
    name: Test APT repository
    timeout-minutes: 10

    strategy:
      matrix:
        container-image:
          - ubuntu:20.04
          - ubuntu:24.04
          - debian:12
        runs-on:
          - ubuntu-22.04
          - ubuntu-22.04-arm

    runs-on: ${{ matrix.runs-on }}
    container:
      image: ${{ matrix.container-image }}

    steps:
      - name: Update CA certificates
        run: |
          apt update
          apt install --reinstall -y ca-certificates
          update-ca-certificates

      - name: Install and run DCMfx
        run: |
          echo "deb [trusted=yes] https://dcmfx.github.io/apt-repository stable main" | tee /etc/apt/sources.list.d/dcmfx.list
          apt update
          apt install -y dcmfx
          dcmfx --version

  test_yum_repository:
    name: Test YUM repository
    timeout-minutes: 10

    strategy:
      matrix:
        container-image:
          - fedora:41
          - redhat/ubi9:9.5
          - amazonlinux:2
        runs-on:
          - ubuntu-22.04
          - ubuntu-22.04-arm

    runs-on: ${{ matrix.runs-on }}
    container:
      image: ${{ matrix.container-image }}

    steps:
      - name: Install and run DCMfx
        run: |
          echo -e "[dcmfx]\nname=DCMfx\nbaseurl=http://dcmfx.github.io/yum-repository\nenabled=1\ngpgcheck=0" | tee /etc/yum.repos.d/dcmfx.repo
          yum makecache
          yum install -y dcmfx
          dcmfx --version

  test_arch_linux:
    name: Test Arch Linux
    timeout-minutes: 20

    runs-on: ubuntu-24.04
    container:
      image: archlinux

    steps:
      - name: Install dependencies
        run: pacman -Sy --noconfirm base-devel git sudo

      - name: Create a 'github' user
        run: |
          useradd -m -G wheel -s /bin/sh github
          echo 'github ALL=(ALL) NOPASSWD: ALL' > /etc/sudoers.d/github

      - name: Install Yay
        run: |
          su - github -c 'git clone https://aur.archlinux.org/yay-bin.git'
          su - github -c 'cd yay-bin && makepkg --syncdeps --install --noconfirm'

      - name: Install and run DCMfx
        run: |
          su - github -c 'yay --sync --noconfirm dcmfx'
          dcmfx --version
