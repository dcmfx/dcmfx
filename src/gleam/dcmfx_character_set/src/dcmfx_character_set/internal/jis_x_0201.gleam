import dcmfx_character_set/internal/lookup_table_8bit

/// Decodes the next codepoint from the given JIS X 0201 bytes.
///
pub fn decode_next_codepoint(bytes) -> Result(#(UtfCodepoint, BitArray), Nil) {
  lookup_table_8bit.decode_next_codepoint(bytes, lookup_table)
}

/// Decodes the next codepoint from the given JIS X 0201 bytes. This decoder
/// maps 0x5C to the backslash character which is divergent from JIS X 0201 but
/// is necessary when decoding multi-valued DICOM strings that use it as a
/// separator.
///
/// This variation is only needed when ISO 2022 Code Extension techniques
/// aren't in use, because when they are the string can use an escape sequence
/// to designate a character set that does provide the backslash character.
///
pub fn decode_next_codepoint_allowing_backslash(
  bytes,
) -> Result(#(UtfCodepoint, BitArray), Nil) {
  lookup_table_8bit.decode_next_codepoint(bytes, lookup_table_with_backslash)
}

const lookup_table = <<
  0x0000:16, 0x0001:16, 0x0002:16, 0x0003:16, 0x0004:16, 0x0005:16, 0x0006:16,
  0x0007:16, 0x0008:16, 0x0009:16, 0x000A:16, 0x000B:16, 0x000C:16, 0x000D:16,
  0x000E:16, 0x000F:16, 0x0010:16, 0x0011:16, 0x0012:16, 0x0013:16, 0x0014:16,
  0x0015:16, 0x0016:16, 0x0017:16, 0x0018:16, 0x0019:16, 0x001A:16, 0x001B:16,
  0x001C:16, 0x001D:16, 0x001E:16, 0x001F:16, 0x0020:16, 0x0021:16, 0x0022:16,
  0x0023:16, 0x0024:16, 0x0025:16, 0x0026:16, 0x0027:16, 0x0028:16, 0x0029:16,
  0x002A:16, 0x002B:16, 0x002C:16, 0x002D:16, 0x002E:16, 0x002F:16, 0x0030:16,
  0x0031:16, 0x0032:16, 0x0033:16, 0x0034:16, 0x0035:16, 0x0036:16, 0x0037:16,
  0x0038:16, 0x0039:16, 0x003A:16, 0x003B:16, 0x003C:16, 0x003D:16, 0x003E:16,
  0x003F:16, 0x0040:16, 0x0041:16, 0x0042:16, 0x0043:16, 0x0044:16, 0x0045:16,
  0x0046:16, 0x0047:16, 0x0048:16, 0x0049:16, 0x004A:16, 0x004B:16, 0x004C:16,
  0x004D:16, 0x004E:16, 0x004F:16, 0x0050:16, 0x0051:16, 0x0052:16, 0x0053:16,
  0x0054:16, 0x0055:16, 0x0056:16, 0x0057:16, 0x0058:16, 0x0059:16, 0x005A:16,
  0x005B:16, 0x00A5:16, 0x005D:16, 0x005E:16, 0x005F:16, 0x0060:16, 0x0061:16,
  0x0062:16, 0x0063:16, 0x0064:16, 0x0065:16, 0x0066:16, 0x0067:16, 0x0068:16,
  0x0069:16, 0x006A:16, 0x006B:16, 0x006C:16, 0x006D:16, 0x006E:16, 0x006F:16,
  0x0070:16, 0x0071:16, 0x0072:16, 0x0073:16, 0x0074:16, 0x0075:16, 0x0076:16,
  0x0077:16, 0x0078:16, 0x0079:16, 0x007A:16, 0x007B:16, 0x007C:16, 0x007D:16,
  0x203E:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16,
  0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16,
  0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16,
  0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16,
  0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16,
  0xFF61:16, 0xFF62:16, 0xFF63:16, 0xFF64:16, 0xFF65:16, 0xFF66:16, 0xFF67:16,
  0xFF68:16, 0xFF69:16, 0xFF6A:16, 0xFF6B:16, 0xFF6C:16, 0xFF6D:16, 0xFF6E:16,
  0xFF6F:16, 0xFF70:16, 0xFF71:16, 0xFF72:16, 0xFF73:16, 0xFF74:16, 0xFF75:16,
  0xFF76:16, 0xFF77:16, 0xFF78:16, 0xFF79:16, 0xFF7A:16, 0xFF7B:16, 0xFF7C:16,
  0xFF7D:16, 0xFF7E:16, 0xFF7F:16, 0xFF80:16, 0xFF81:16, 0xFF82:16, 0xFF83:16,
  0xFF84:16, 0xFF85:16, 0xFF86:16, 0xFF87:16, 0xFF88:16, 0xFF89:16, 0xFF8A:16,
  0xFF8B:16, 0xFF8C:16, 0xFF8D:16, 0xFF8E:16, 0xFF8F:16, 0xFF90:16, 0xFF91:16,
  0xFF92:16, 0xFF93:16, 0xFF94:16, 0xFF95:16, 0xFF96:16, 0xFF97:16, 0xFF98:16,
  0xFF99:16, 0xFF9A:16, 0xFF9B:16, 0xFF9C:16, 0xFF9D:16, 0xFF9E:16, 0xFF9F:16,
  0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16,
  0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16,
  0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16,
  0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16,
  0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16,
>>

const lookup_table_with_backslash = <<
  0x0000:16, 0x0001:16, 0x0002:16, 0x0003:16, 0x0004:16, 0x0005:16, 0x0006:16,
  0x0007:16, 0x0008:16, 0x0009:16, 0x000A:16, 0x000B:16, 0x000C:16, 0x000D:16,
  0x000E:16, 0x000F:16, 0x0010:16, 0x0011:16, 0x0012:16, 0x0013:16, 0x0014:16,
  0x0015:16, 0x0016:16, 0x0017:16, 0x0018:16, 0x0019:16, 0x001A:16, 0x001B:16,
  0x001C:16, 0x001D:16, 0x001E:16, 0x001F:16, 0x0020:16, 0x0021:16, 0x0022:16,
  0x0023:16, 0x0024:16, 0x0025:16, 0x0026:16, 0x0027:16, 0x0028:16, 0x0029:16,
  0x002A:16, 0x002B:16, 0x002C:16, 0x002D:16, 0x002E:16, 0x002F:16, 0x0030:16,
  0x0031:16, 0x0032:16, 0x0033:16, 0x0034:16, 0x0035:16, 0x0036:16, 0x0037:16,
  0x0038:16, 0x0039:16, 0x003A:16, 0x003B:16, 0x003C:16, 0x003D:16, 0x003E:16,
  0x003F:16, 0x0040:16, 0x0041:16, 0x0042:16, 0x0043:16, 0x0044:16, 0x0045:16,
  0x0046:16, 0x0047:16, 0x0048:16, 0x0049:16, 0x004A:16, 0x004B:16, 0x004C:16,
  0x004D:16, 0x004E:16, 0x004F:16, 0x0050:16, 0x0051:16, 0x0052:16, 0x0053:16,
  0x0054:16, 0x0055:16, 0x0056:16, 0x0057:16, 0x0058:16, 0x0059:16, 0x005A:16,
  0x005B:16, 0x005C:16, 0x005D:16, 0x005E:16, 0x005F:16, 0x0060:16, 0x0061:16,
  0x0062:16, 0x0063:16, 0x0064:16, 0x0065:16, 0x0066:16, 0x0067:16, 0x0068:16,
  0x0069:16, 0x006A:16, 0x006B:16, 0x006C:16, 0x006D:16, 0x006E:16, 0x006F:16,
  0x0070:16, 0x0071:16, 0x0072:16, 0x0073:16, 0x0074:16, 0x0075:16, 0x0076:16,
  0x0077:16, 0x0078:16, 0x0079:16, 0x007A:16, 0x007B:16, 0x007C:16, 0x007D:16,
  0x203E:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16,
  0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16,
  0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16,
  0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16,
  0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16,
  0xFF61:16, 0xFF62:16, 0xFF63:16, 0xFF64:16, 0xFF65:16, 0xFF66:16, 0xFF67:16,
  0xFF68:16, 0xFF69:16, 0xFF6A:16, 0xFF6B:16, 0xFF6C:16, 0xFF6D:16, 0xFF6E:16,
  0xFF6F:16, 0xFF70:16, 0xFF71:16, 0xFF72:16, 0xFF73:16, 0xFF74:16, 0xFF75:16,
  0xFF76:16, 0xFF77:16, 0xFF78:16, 0xFF79:16, 0xFF7A:16, 0xFF7B:16, 0xFF7C:16,
  0xFF7D:16, 0xFF7E:16, 0xFF7F:16, 0xFF80:16, 0xFF81:16, 0xFF82:16, 0xFF83:16,
  0xFF84:16, 0xFF85:16, 0xFF86:16, 0xFF87:16, 0xFF88:16, 0xFF89:16, 0xFF8A:16,
  0xFF8B:16, 0xFF8C:16, 0xFF8D:16, 0xFF8E:16, 0xFF8F:16, 0xFF90:16, 0xFF91:16,
  0xFF92:16, 0xFF93:16, 0xFF94:16, 0xFF95:16, 0xFF96:16, 0xFF97:16, 0xFF98:16,
  0xFF99:16, 0xFF9A:16, 0xFF9B:16, 0xFF9C:16, 0xFF9D:16, 0xFF9E:16, 0xFF9F:16,
  0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16,
  0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16,
  0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16,
  0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16,
  0xFFFD:16, 0xFFFD:16, 0xFFFD:16, 0xFFFD:16,
>>
